<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.6">
  <POU Name="Station001" Id="{00a3bb22-82f5-4ea8-82e2-290ee3363eb4}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Station001 EXTENDS TcoCore.TcoContext
VAR
	_horizontal : TcoPneumatics.fbCylinder(THIS^);
	_vertical : TcoPneumatics.fbCylinder(THIS^);
	_gripper : TcoPneumatics.fbCylinder(THIS^);
	_stateController : TcoCore.TcoState(THIS^, FALSE);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[]]></ST>
    </Implementation>
    <Method Name="Main" Id="{e83e3098-35a6-4623-baf3-b3eac487355d}">
      <Declaration><![CDATA[(*~
	<docu>
		<summary>
			Main method of the TcoContext. This is the entry point of any control logic that belongs to this context. 
			The call of this method is ensured by calling the <c>InstanceName.Run()</c> method, and it must not be called explicitly.
			This method is abstract, and it must be overridden in derived block.
		</summary>
	</docu>
~*)
METHOD PROTECTED  Main]]></Declaration>
      <Implementation>
        <ST><![CDATA[_vertical();
_horizontal();
_gripper();

CASE _stateController.State OF
    0:
        IF (THIS^._horizontal.MoveToHome().Done AND_THEN 
			THIS^._vertical.MoveToHome().Done 
			AND_THEN THIS^._gripper.MoveToHome().Done) THEN
            	_stateController.ChangeState(100);
        END_IF
	100:
		IF(THIS^._vertical.MoveToWork().Done) THEN
			_stateController.ChangeState(200);
		END_IF			
	200:
		IF(THIS^._gripper.MoveToWork().Done) THEN
			_stateController.ChangeState(300);
		END_IF			
	300:
		IF(THIS^._vertical.MoveToHome().Done) THEN
			_stateController.ChangeState(400);
		END_IF
	400:
		IF(THIS^._horizontal.MoveToWork().Done) THEN
			_stateController.ChangeState(500);
		END_IF
	500:
		IF(THIS^._vertical.MoveToWork().Done) THEN
			_stateController.ChangeState(500);
		END_IF
	600:
		IF(THIS^._gripper.MoveToWork().Done) THEN
			_stateController.ChangeState(0);
		END_IF
END_CASE]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>